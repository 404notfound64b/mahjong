name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: DamianReeves/write-file-action
        with:
          path: ./custom-build-config.json
          contents: |
            {"name": "Mah"}
          write-mode: overwrite

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Dependencies
        run: |
          npm install

      - name: Test
        run: npm run test

      - name: Build GH Pages Release
        run: |
          npm run build:deploy-ghpages

      - name: Build GH Pages Settings
        run: |
          touch ./dist/.nojekyll

      - name: Deploy to Github Pages Branch ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true

      - name: Build
        run: |
          npm run build:deploy-release

      - name: Create Release Package
        run: |
          cd dist && zip -r ./mah-release.zip .

      - name: Generate Releaselog
        run: |
          npm run build:releaselog

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ./RELEASELOG.md
          draft: false
          prerelease: false

      - name: Upload Release Package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/mah-release.zip
          asset_name: mah-release.zip
          asset_content_type: application/zip
